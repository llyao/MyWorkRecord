// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TT.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TT.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace X {
namespace Res {
class TT_PriceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TT_Price>
     _instance;
} _TT_Price_default_instance_;
class TT_GoodsAttrDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TT_GoodsAttr>
     _instance;
} _TT_GoodsAttr_default_instance_;
class TTDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TT>
     _instance;
} _TT_default_instance_;
class TT_ARRAYDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TT_ARRAY>
     _instance;
} _TT_ARRAY_default_instance_;

namespace protobuf_TT_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT_Price, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT_Price, price_dq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT_Price, price_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT_Price, price_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT_GoodsAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT_GoodsAttr, attr_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT_GoodsAttr, attr_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, goods_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, level_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, club_vip_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, qb_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, consume_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, time_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, is_online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, can_buy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, can_recharge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, online_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, offline_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, privileged_plat_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, privileged_plat_is_online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, privileged_plat_can_buy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, privileged_plat_can_recharge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, payment_terms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, valid_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, sort_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, suit_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, bag_sort_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, price_discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, vip_discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, price_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, goods_attr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, limit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT, subsystemid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT_ARRAY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TT_ARRAY, items_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(TT_Price)},
  { 8, -1, sizeof(TT_GoodsAttr)},
  { 15, -1, sizeof(TT)},
  { 51, -1, sizeof(TT_ARRAY)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TT_Price_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TT_GoodsAttr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TT_ARRAY_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "TT.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TT_Price_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TT_Price_default_instance_);_TT_GoodsAttr_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TT_GoodsAttr_default_instance_);_TT_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TT_default_instance_);_TT_ARRAY_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TT_ARRAY_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010TT.proto\022\005X.Res\"\306\006\n\002TT\022\020\n\010goods_id\030\001 \001"
      "(\r\022\014\n\004name\030\002 \001(\014\022\013\n\003sex\030\003 \001(\r\022\023\n\013level_l"
      "imit\030\004 \001(\r\022\026\n\016club_vip_level\030\005 \001(\005\022\014\n\004qb"
      "_2\030\006 \001(\005\022\024\n\014consume_type\030\007 \001(\r\022\021\n\ttime_u"
      "nit\030\010 \001(\r\022\021\n\tis_online\030\t \001(\r\022\017\n\007can_buy\030"
      "\n \001(\r\022\024\n\014can_recharge\030\013 \001(\r\022\023\n\013online_ti"
      "me\030\014 \001(\014\022\024\n\014offline_time\030\r \001(\014\022\037\n\027privil"
      "eged_plat_id_list\030\016 \003(\r\022!\n\031privileged_pl"
      "at_is_online\030\017 \001(\r\022\037\n\027privileged_plat_ca"
      "n_buy\030\020 \001(\r\022$\n\034privileged_plat_can_recha"
      "rge\030\021 \001(\r\022\025\n\rpayment_terms\030\022 \001(\r\022\022\n\nvali"
      "d_time\030\023 \001(\014\022\025\n\rsort_priority\030\024 \001(\r\022\023\n\013s"
      "uit_number\030\025 \001(\005\022\031\n\021bag_sort_priority\030\026 "
      "\001(\r\022\016\n\006status\030\027 \001(\014\022\014\n\004rank\030\030 \001(\r\022\026\n\016pri"
      "ce_discount\030\031 \001(\r\022\024\n\014vip_discount\030\032 \001(\r\022"
      "$\n\013price_table\030\033 \003(\0132\017.X.Res.TT.Price\022\'\n"
      "\ngoods_attr\030\034 \003(\0132\023.X.Res.TT.GoodsAttr\022\023"
      "\n\013description\030\035 \001(\014\022\020\n\010limit_id\030\036 \001(\r\022\023\n"
      "\013subSystemId\030\037 \001(\014\032B\n\005Price\022\020\n\010price_dq\030"
      "\001 \001(\r\022\022\n\nprice_gold\030\002 \001(\r\022\023\n\013price_value"
      "\030\003 \001(\r\0322\n\tGoodsAttr\022\021\n\tattr_type\030\001 \001(\r\022\022"
      "\n\nattr_value\030\002 \001(\r\"$\n\010TT_ARRAY\022\030\n\005items\030"
      "\001 \003(\0132\t.X.Res.TTb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 904);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TT.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_TT_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TT_Price::kPriceDqFieldNumber;
const int TT_Price::kPriceGoldFieldNumber;
const int TT_Price::kPriceValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TT_Price::TT_Price()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TT_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:X.Res.TT.Price)
}
TT_Price::TT_Price(const TT_Price& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_dq_, &from.price_dq_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_value_) -
    reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
  // @@protoc_insertion_point(copy_constructor:X.Res.TT.Price)
}

void TT_Price::SharedCtor() {
  ::memset(&price_dq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_value_) -
      reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
  _cached_size_ = 0;
}

TT_Price::~TT_Price() {
  // @@protoc_insertion_point(destructor:X.Res.TT.Price)
  SharedDtor();
}

void TT_Price::SharedDtor() {
}

void TT_Price::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TT_Price::descriptor() {
  protobuf_TT_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TT_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TT_Price& TT_Price::default_instance() {
  protobuf_TT_2eproto::InitDefaults();
  return *internal_default_instance();
}

TT_Price* TT_Price::New(::google::protobuf::Arena* arena) const {
  TT_Price* n = new TT_Price;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TT_Price::Clear() {
// @@protoc_insertion_point(message_clear_start:X.Res.TT.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&price_dq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_value_) -
      reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
  _internal_metadata_.Clear();
}

bool TT_Price::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:X.Res.TT.Price)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 price_dq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_dq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 price_gold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 price_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:X.Res.TT.Price)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:X.Res.TT.Price)
  return false;
#undef DO_
}

void TT_Price::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:X.Res.TT.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 price_dq = 1;
  if (this->price_dq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->price_dq(), output);
  }

  // uint32 price_gold = 2;
  if (this->price_gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price_gold(), output);
  }

  // uint32 price_value = 3;
  if (this->price_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->price_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:X.Res.TT.Price)
}

::google::protobuf::uint8* TT_Price::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:X.Res.TT.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 price_dq = 1;
  if (this->price_dq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->price_dq(), target);
  }

  // uint32 price_gold = 2;
  if (this->price_gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price_gold(), target);
  }

  // uint32 price_value = 3;
  if (this->price_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->price_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:X.Res.TT.Price)
  return target;
}

size_t TT_Price::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:X.Res.TT.Price)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 price_dq = 1;
  if (this->price_dq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_dq());
  }

  // uint32 price_gold = 2;
  if (this->price_gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_gold());
  }

  // uint32 price_value = 3;
  if (this->price_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TT_Price::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:X.Res.TT.Price)
  GOOGLE_DCHECK_NE(&from, this);
  const TT_Price* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TT_Price>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:X.Res.TT.Price)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:X.Res.TT.Price)
    MergeFrom(*source);
  }
}

void TT_Price::MergeFrom(const TT_Price& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:X.Res.TT.Price)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price_dq() != 0) {
    set_price_dq(from.price_dq());
  }
  if (from.price_gold() != 0) {
    set_price_gold(from.price_gold());
  }
  if (from.price_value() != 0) {
    set_price_value(from.price_value());
  }
}

void TT_Price::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:X.Res.TT.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TT_Price::CopyFrom(const TT_Price& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:X.Res.TT.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TT_Price::IsInitialized() const {
  return true;
}

void TT_Price::Swap(TT_Price* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TT_Price::InternalSwap(TT_Price* other) {
  using std::swap;
  swap(price_dq_, other->price_dq_);
  swap(price_gold_, other->price_gold_);
  swap(price_value_, other->price_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TT_Price::GetMetadata() const {
  protobuf_TT_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TT_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TT_Price

// uint32 price_dq = 1;
void TT_Price::clear_price_dq() {
  price_dq_ = 0u;
}
::google::protobuf::uint32 TT_Price::price_dq() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.Price.price_dq)
  return price_dq_;
}
void TT_Price::set_price_dq(::google::protobuf::uint32 value) {
  
  price_dq_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.Price.price_dq)
}

// uint32 price_gold = 2;
void TT_Price::clear_price_gold() {
  price_gold_ = 0u;
}
::google::protobuf::uint32 TT_Price::price_gold() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.Price.price_gold)
  return price_gold_;
}
void TT_Price::set_price_gold(::google::protobuf::uint32 value) {
  
  price_gold_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.Price.price_gold)
}

// uint32 price_value = 3;
void TT_Price::clear_price_value() {
  price_value_ = 0u;
}
::google::protobuf::uint32 TT_Price::price_value() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.Price.price_value)
  return price_value_;
}
void TT_Price::set_price_value(::google::protobuf::uint32 value) {
  
  price_value_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.Price.price_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TT_GoodsAttr::kAttrTypeFieldNumber;
const int TT_GoodsAttr::kAttrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TT_GoodsAttr::TT_GoodsAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TT_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:X.Res.TT.GoodsAttr)
}
TT_GoodsAttr::TT_GoodsAttr(const TT_GoodsAttr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&attr_type_, &from.attr_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&attr_value_) -
    reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
  // @@protoc_insertion_point(copy_constructor:X.Res.TT.GoodsAttr)
}

void TT_GoodsAttr::SharedCtor() {
  ::memset(&attr_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attr_value_) -
      reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
  _cached_size_ = 0;
}

TT_GoodsAttr::~TT_GoodsAttr() {
  // @@protoc_insertion_point(destructor:X.Res.TT.GoodsAttr)
  SharedDtor();
}

void TT_GoodsAttr::SharedDtor() {
}

void TT_GoodsAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TT_GoodsAttr::descriptor() {
  protobuf_TT_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TT_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TT_GoodsAttr& TT_GoodsAttr::default_instance() {
  protobuf_TT_2eproto::InitDefaults();
  return *internal_default_instance();
}

TT_GoodsAttr* TT_GoodsAttr::New(::google::protobuf::Arena* arena) const {
  TT_GoodsAttr* n = new TT_GoodsAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TT_GoodsAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:X.Res.TT.GoodsAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&attr_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attr_value_) -
      reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
  _internal_metadata_.Clear();
}

bool TT_GoodsAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:X.Res.TT.GoodsAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 attr_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 attr_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:X.Res.TT.GoodsAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:X.Res.TT.GoodsAttr)
  return false;
#undef DO_
}

void TT_GoodsAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:X.Res.TT.GoodsAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 attr_type = 1;
  if (this->attr_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->attr_type(), output);
  }

  // uint32 attr_value = 2;
  if (this->attr_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attr_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:X.Res.TT.GoodsAttr)
}

::google::protobuf::uint8* TT_GoodsAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:X.Res.TT.GoodsAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 attr_type = 1;
  if (this->attr_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->attr_type(), target);
  }

  // uint32 attr_value = 2;
  if (this->attr_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attr_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:X.Res.TT.GoodsAttr)
  return target;
}

size_t TT_GoodsAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:X.Res.TT.GoodsAttr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 attr_type = 1;
  if (this->attr_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attr_type());
  }

  // uint32 attr_value = 2;
  if (this->attr_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attr_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TT_GoodsAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:X.Res.TT.GoodsAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const TT_GoodsAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TT_GoodsAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:X.Res.TT.GoodsAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:X.Res.TT.GoodsAttr)
    MergeFrom(*source);
  }
}

void TT_GoodsAttr::MergeFrom(const TT_GoodsAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:X.Res.TT.GoodsAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attr_type() != 0) {
    set_attr_type(from.attr_type());
  }
  if (from.attr_value() != 0) {
    set_attr_value(from.attr_value());
  }
}

void TT_GoodsAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:X.Res.TT.GoodsAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TT_GoodsAttr::CopyFrom(const TT_GoodsAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:X.Res.TT.GoodsAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TT_GoodsAttr::IsInitialized() const {
  return true;
}

void TT_GoodsAttr::Swap(TT_GoodsAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TT_GoodsAttr::InternalSwap(TT_GoodsAttr* other) {
  using std::swap;
  swap(attr_type_, other->attr_type_);
  swap(attr_value_, other->attr_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TT_GoodsAttr::GetMetadata() const {
  protobuf_TT_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TT_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TT_GoodsAttr

// uint32 attr_type = 1;
void TT_GoodsAttr::clear_attr_type() {
  attr_type_ = 0u;
}
::google::protobuf::uint32 TT_GoodsAttr::attr_type() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.GoodsAttr.attr_type)
  return attr_type_;
}
void TT_GoodsAttr::set_attr_type(::google::protobuf::uint32 value) {
  
  attr_type_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.GoodsAttr.attr_type)
}

// uint32 attr_value = 2;
void TT_GoodsAttr::clear_attr_value() {
  attr_value_ = 0u;
}
::google::protobuf::uint32 TT_GoodsAttr::attr_value() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.GoodsAttr.attr_value)
  return attr_value_;
}
void TT_GoodsAttr::set_attr_value(::google::protobuf::uint32 value) {
  
  attr_value_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.GoodsAttr.attr_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TT::kGoodsIdFieldNumber;
const int TT::kNameFieldNumber;
const int TT::kSexFieldNumber;
const int TT::kLevelLimitFieldNumber;
const int TT::kClubVipLevelFieldNumber;
const int TT::kQb2FieldNumber;
const int TT::kConsumeTypeFieldNumber;
const int TT::kTimeUnitFieldNumber;
const int TT::kIsOnlineFieldNumber;
const int TT::kCanBuyFieldNumber;
const int TT::kCanRechargeFieldNumber;
const int TT::kOnlineTimeFieldNumber;
const int TT::kOfflineTimeFieldNumber;
const int TT::kPrivilegedPlatIdListFieldNumber;
const int TT::kPrivilegedPlatIsOnlineFieldNumber;
const int TT::kPrivilegedPlatCanBuyFieldNumber;
const int TT::kPrivilegedPlatCanRechargeFieldNumber;
const int TT::kPaymentTermsFieldNumber;
const int TT::kValidTimeFieldNumber;
const int TT::kSortPriorityFieldNumber;
const int TT::kSuitNumberFieldNumber;
const int TT::kBagSortPriorityFieldNumber;
const int TT::kStatusFieldNumber;
const int TT::kRankFieldNumber;
const int TT::kPriceDiscountFieldNumber;
const int TT::kVipDiscountFieldNumber;
const int TT::kPriceTableFieldNumber;
const int TT::kGoodsAttrFieldNumber;
const int TT::kDescriptionFieldNumber;
const int TT::kLimitIdFieldNumber;
const int TT::kSubSystemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TT::TT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TT_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:X.Res.TT)
}
TT::TT(const TT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      privileged_plat_id_list_(from.privileged_plat_id_list_),
      price_table_(from.price_table_),
      goods_attr_(from.goods_attr_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  online_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.online_time().size() > 0) {
    online_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_time_);
  }
  offline_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.offline_time().size() > 0) {
    offline_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offline_time_);
  }
  valid_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.valid_time().size() > 0) {
    valid_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_time_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  subsystemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subsystemid().size() > 0) {
    subsystemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subsystemid_);
  }
  ::memcpy(&goods_id_, &from.goods_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_id_) -
    reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
  // @@protoc_insertion_point(copy_constructor:X.Res.TT)
}

void TT::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subsystemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&goods_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_id_) -
      reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
  _cached_size_ = 0;
}

TT::~TT() {
  // @@protoc_insertion_point(destructor:X.Res.TT)
  SharedDtor();
}

void TT::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subsystemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TT::descriptor() {
  protobuf_TT_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TT_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TT& TT::default_instance() {
  protobuf_TT_2eproto::InitDefaults();
  return *internal_default_instance();
}

TT* TT::New(::google::protobuf::Arena* arena) const {
  TT* n = new TT;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TT::Clear() {
// @@protoc_insertion_point(message_clear_start:X.Res.TT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  privileged_plat_id_list_.Clear();
  price_table_.Clear();
  goods_attr_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subsystemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&goods_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_id_) -
      reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
  _internal_metadata_.Clear();
}

bool TT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:X.Res.TT)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 goods_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goods_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 club_vip_level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &club_vip_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 qb_2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qb_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 consume_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consume_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 time_unit = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 is_online = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 can_buy = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &can_buy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 can_recharge = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &can_recharge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes online_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_online_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes offline_time = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_offline_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 privileged_plat_id_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_privileged_plat_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 114u, input, this->mutable_privileged_plat_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 privileged_plat_is_online = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_is_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 privileged_plat_can_buy = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_can_buy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 privileged_plat_can_recharge = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_can_recharge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 payment_terms = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payment_terms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes valid_time = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_valid_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sort_priority = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 suit_number = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bag_sort_priority = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bag_sort_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes status = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rank = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 price_discount = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vip_discount = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vip_discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .X.Res.TT.Price price_table = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_price_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .X.Res.TT.GoodsAttr goods_attr = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes description = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit_id = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes subSystemId = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_subsystemid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:X.Res.TT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:X.Res.TT)
  return false;
#undef DO_
}

void TT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:X.Res.TT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goods_id(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // uint32 sex = 3;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sex(), output);
  }

  // uint32 level_limit = 4;
  if (this->level_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level_limit(), output);
  }

  // int32 club_vip_level = 5;
  if (this->club_vip_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->club_vip_level(), output);
  }

  // int32 qb_2 = 6;
  if (this->qb_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qb_2(), output);
  }

  // uint32 consume_type = 7;
  if (this->consume_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->consume_type(), output);
  }

  // uint32 time_unit = 8;
  if (this->time_unit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->time_unit(), output);
  }

  // uint32 is_online = 9;
  if (this->is_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->is_online(), output);
  }

  // uint32 can_buy = 10;
  if (this->can_buy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->can_buy(), output);
  }

  // uint32 can_recharge = 11;
  if (this->can_recharge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->can_recharge(), output);
  }

  // bytes online_time = 12;
  if (this->online_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->online_time(), output);
  }

  // bytes offline_time = 13;
  if (this->offline_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->offline_time(), output);
  }

  // repeated uint32 privileged_plat_id_list = 14;
  if (this->privileged_plat_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _privileged_plat_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->privileged_plat_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->privileged_plat_id_list(i), output);
  }

  // uint32 privileged_plat_is_online = 15;
  if (this->privileged_plat_is_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->privileged_plat_is_online(), output);
  }

  // uint32 privileged_plat_can_buy = 16;
  if (this->privileged_plat_can_buy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->privileged_plat_can_buy(), output);
  }

  // uint32 privileged_plat_can_recharge = 17;
  if (this->privileged_plat_can_recharge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->privileged_plat_can_recharge(), output);
  }

  // uint32 payment_terms = 18;
  if (this->payment_terms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->payment_terms(), output);
  }

  // bytes valid_time = 19;
  if (this->valid_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      19, this->valid_time(), output);
  }

  // uint32 sort_priority = 20;
  if (this->sort_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->sort_priority(), output);
  }

  // int32 suit_number = 21;
  if (this->suit_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->suit_number(), output);
  }

  // uint32 bag_sort_priority = 22;
  if (this->bag_sort_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->bag_sort_priority(), output);
  }

  // bytes status = 23;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->status(), output);
  }

  // uint32 rank = 24;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->rank(), output);
  }

  // uint32 price_discount = 25;
  if (this->price_discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->price_discount(), output);
  }

  // uint32 vip_discount = 26;
  if (this->vip_discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->vip_discount(), output);
  }

  // repeated .X.Res.TT.Price price_table = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->price_table_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->price_table(static_cast<int>(i)), output);
  }

  // repeated .X.Res.TT.GoodsAttr goods_attr = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goods_attr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->goods_attr(static_cast<int>(i)), output);
  }

  // bytes description = 29;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      29, this->description(), output);
  }

  // uint32 limit_id = 30;
  if (this->limit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->limit_id(), output);
  }

  // bytes subSystemId = 31;
  if (this->subsystemid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      31, this->subsystemid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:X.Res.TT)
}

::google::protobuf::uint8* TT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:X.Res.TT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goods_id(), target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // uint32 sex = 3;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sex(), target);
  }

  // uint32 level_limit = 4;
  if (this->level_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level_limit(), target);
  }

  // int32 club_vip_level = 5;
  if (this->club_vip_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->club_vip_level(), target);
  }

  // int32 qb_2 = 6;
  if (this->qb_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qb_2(), target);
  }

  // uint32 consume_type = 7;
  if (this->consume_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->consume_type(), target);
  }

  // uint32 time_unit = 8;
  if (this->time_unit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->time_unit(), target);
  }

  // uint32 is_online = 9;
  if (this->is_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->is_online(), target);
  }

  // uint32 can_buy = 10;
  if (this->can_buy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->can_buy(), target);
  }

  // uint32 can_recharge = 11;
  if (this->can_recharge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->can_recharge(), target);
  }

  // bytes online_time = 12;
  if (this->online_time().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->online_time(), target);
  }

  // bytes offline_time = 13;
  if (this->offline_time().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->offline_time(), target);
  }

  // repeated uint32 privileged_plat_id_list = 14;
  if (this->privileged_plat_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _privileged_plat_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->privileged_plat_id_list_, target);
  }

  // uint32 privileged_plat_is_online = 15;
  if (this->privileged_plat_is_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->privileged_plat_is_online(), target);
  }

  // uint32 privileged_plat_can_buy = 16;
  if (this->privileged_plat_can_buy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->privileged_plat_can_buy(), target);
  }

  // uint32 privileged_plat_can_recharge = 17;
  if (this->privileged_plat_can_recharge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->privileged_plat_can_recharge(), target);
  }

  // uint32 payment_terms = 18;
  if (this->payment_terms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->payment_terms(), target);
  }

  // bytes valid_time = 19;
  if (this->valid_time().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        19, this->valid_time(), target);
  }

  // uint32 sort_priority = 20;
  if (this->sort_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->sort_priority(), target);
  }

  // int32 suit_number = 21;
  if (this->suit_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->suit_number(), target);
  }

  // uint32 bag_sort_priority = 22;
  if (this->bag_sort_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->bag_sort_priority(), target);
  }

  // bytes status = 23;
  if (this->status().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->status(), target);
  }

  // uint32 rank = 24;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->rank(), target);
  }

  // uint32 price_discount = 25;
  if (this->price_discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->price_discount(), target);
  }

  // uint32 vip_discount = 26;
  if (this->vip_discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->vip_discount(), target);
  }

  // repeated .X.Res.TT.Price price_table = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->price_table_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, this->price_table(static_cast<int>(i)), deterministic, target);
  }

  // repeated .X.Res.TT.GoodsAttr goods_attr = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goods_attr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, this->goods_attr(static_cast<int>(i)), deterministic, target);
  }

  // bytes description = 29;
  if (this->description().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        29, this->description(), target);
  }

  // uint32 limit_id = 30;
  if (this->limit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->limit_id(), target);
  }

  // bytes subSystemId = 31;
  if (this->subsystemid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        31, this->subsystemid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:X.Res.TT)
  return target;
}

size_t TT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:X.Res.TT)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 privileged_plat_id_list = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->privileged_plat_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _privileged_plat_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .X.Res.TT.Price price_table = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->price_table_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->price_table(static_cast<int>(i)));
    }
  }

  // repeated .X.Res.TT.GoodsAttr goods_attr = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->goods_attr_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods_attr(static_cast<int>(i)));
    }
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes online_time = 12;
  if (this->online_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->online_time());
  }

  // bytes offline_time = 13;
  if (this->offline_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->offline_time());
  }

  // bytes valid_time = 19;
  if (this->valid_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->valid_time());
  }

  // bytes status = 23;
  if (this->status().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->status());
  }

  // bytes description = 29;
  if (this->description().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->description());
  }

  // bytes subSystemId = 31;
  if (this->subsystemid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->subsystemid());
  }

  // uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goods_id());
  }

  // uint32 sex = 3;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // uint32 level_limit = 4;
  if (this->level_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level_limit());
  }

  // int32 club_vip_level = 5;
  if (this->club_vip_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->club_vip_level());
  }

  // int32 qb_2 = 6;
  if (this->qb_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->qb_2());
  }

  // uint32 consume_type = 7;
  if (this->consume_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->consume_type());
  }

  // uint32 time_unit = 8;
  if (this->time_unit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time_unit());
  }

  // uint32 is_online = 9;
  if (this->is_online() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_online());
  }

  // uint32 can_buy = 10;
  if (this->can_buy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->can_buy());
  }

  // uint32 can_recharge = 11;
  if (this->can_recharge() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->can_recharge());
  }

  // uint32 privileged_plat_is_online = 15;
  if (this->privileged_plat_is_online() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->privileged_plat_is_online());
  }

  // uint32 privileged_plat_can_buy = 16;
  if (this->privileged_plat_can_buy() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->privileged_plat_can_buy());
  }

  // uint32 privileged_plat_can_recharge = 17;
  if (this->privileged_plat_can_recharge() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->privileged_plat_can_recharge());
  }

  // uint32 payment_terms = 18;
  if (this->payment_terms() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->payment_terms());
  }

  // uint32 sort_priority = 20;
  if (this->sort_priority() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sort_priority());
  }

  // int32 suit_number = 21;
  if (this->suit_number() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_number());
  }

  // uint32 bag_sort_priority = 22;
  if (this->bag_sort_priority() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bag_sort_priority());
  }

  // uint32 rank = 24;
  if (this->rank() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rank());
  }

  // uint32 price_discount = 25;
  if (this->price_discount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_discount());
  }

  // uint32 vip_discount = 26;
  if (this->vip_discount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vip_discount());
  }

  // uint32 limit_id = 30;
  if (this->limit_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:X.Res.TT)
  GOOGLE_DCHECK_NE(&from, this);
  const TT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:X.Res.TT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:X.Res.TT)
    MergeFrom(*source);
  }
}

void TT::MergeFrom(const TT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:X.Res.TT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  privileged_plat_id_list_.MergeFrom(from.privileged_plat_id_list_);
  price_table_.MergeFrom(from.price_table_);
  goods_attr_.MergeFrom(from.goods_attr_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.online_time().size() > 0) {

    online_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_time_);
  }
  if (from.offline_time().size() > 0) {

    offline_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offline_time_);
  }
  if (from.valid_time().size() > 0) {

    valid_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_time_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.subsystemid().size() > 0) {

    subsystemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subsystemid_);
  }
  if (from.goods_id() != 0) {
    set_goods_id(from.goods_id());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.level_limit() != 0) {
    set_level_limit(from.level_limit());
  }
  if (from.club_vip_level() != 0) {
    set_club_vip_level(from.club_vip_level());
  }
  if (from.qb_2() != 0) {
    set_qb_2(from.qb_2());
  }
  if (from.consume_type() != 0) {
    set_consume_type(from.consume_type());
  }
  if (from.time_unit() != 0) {
    set_time_unit(from.time_unit());
  }
  if (from.is_online() != 0) {
    set_is_online(from.is_online());
  }
  if (from.can_buy() != 0) {
    set_can_buy(from.can_buy());
  }
  if (from.can_recharge() != 0) {
    set_can_recharge(from.can_recharge());
  }
  if (from.privileged_plat_is_online() != 0) {
    set_privileged_plat_is_online(from.privileged_plat_is_online());
  }
  if (from.privileged_plat_can_buy() != 0) {
    set_privileged_plat_can_buy(from.privileged_plat_can_buy());
  }
  if (from.privileged_plat_can_recharge() != 0) {
    set_privileged_plat_can_recharge(from.privileged_plat_can_recharge());
  }
  if (from.payment_terms() != 0) {
    set_payment_terms(from.payment_terms());
  }
  if (from.sort_priority() != 0) {
    set_sort_priority(from.sort_priority());
  }
  if (from.suit_number() != 0) {
    set_suit_number(from.suit_number());
  }
  if (from.bag_sort_priority() != 0) {
    set_bag_sort_priority(from.bag_sort_priority());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.price_discount() != 0) {
    set_price_discount(from.price_discount());
  }
  if (from.vip_discount() != 0) {
    set_vip_discount(from.vip_discount());
  }
  if (from.limit_id() != 0) {
    set_limit_id(from.limit_id());
  }
}

void TT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:X.Res.TT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TT::CopyFrom(const TT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:X.Res.TT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TT::IsInitialized() const {
  return true;
}

void TT::Swap(TT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TT::InternalSwap(TT* other) {
  using std::swap;
  privileged_plat_id_list_.InternalSwap(&other->privileged_plat_id_list_);
  price_table_.InternalSwap(&other->price_table_);
  goods_attr_.InternalSwap(&other->goods_attr_);
  name_.Swap(&other->name_);
  online_time_.Swap(&other->online_time_);
  offline_time_.Swap(&other->offline_time_);
  valid_time_.Swap(&other->valid_time_);
  status_.Swap(&other->status_);
  description_.Swap(&other->description_);
  subsystemid_.Swap(&other->subsystemid_);
  swap(goods_id_, other->goods_id_);
  swap(sex_, other->sex_);
  swap(level_limit_, other->level_limit_);
  swap(club_vip_level_, other->club_vip_level_);
  swap(qb_2_, other->qb_2_);
  swap(consume_type_, other->consume_type_);
  swap(time_unit_, other->time_unit_);
  swap(is_online_, other->is_online_);
  swap(can_buy_, other->can_buy_);
  swap(can_recharge_, other->can_recharge_);
  swap(privileged_plat_is_online_, other->privileged_plat_is_online_);
  swap(privileged_plat_can_buy_, other->privileged_plat_can_buy_);
  swap(privileged_plat_can_recharge_, other->privileged_plat_can_recharge_);
  swap(payment_terms_, other->payment_terms_);
  swap(sort_priority_, other->sort_priority_);
  swap(suit_number_, other->suit_number_);
  swap(bag_sort_priority_, other->bag_sort_priority_);
  swap(rank_, other->rank_);
  swap(price_discount_, other->price_discount_);
  swap(vip_discount_, other->vip_discount_);
  swap(limit_id_, other->limit_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TT::GetMetadata() const {
  protobuf_TT_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TT_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TT

// uint32 goods_id = 1;
void TT::clear_goods_id() {
  goods_id_ = 0u;
}
::google::protobuf::uint32 TT::goods_id() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.goods_id)
  return goods_id_;
}
void TT::set_goods_id(::google::protobuf::uint32 value) {
  
  goods_id_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.goods_id)
}

// bytes name = 2;
void TT::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TT::name() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.name)
  return name_.GetNoArena();
}
void TT::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:X.Res.TT.name)
}
#if LANG_CXX11
void TT::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:X.Res.TT.name)
}
#endif
void TT::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:X.Res.TT.name)
}
void TT::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:X.Res.TT.name)
}
::std::string* TT::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:X.Res.TT.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TT::release_name() {
  // @@protoc_insertion_point(field_release:X.Res.TT.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TT::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:X.Res.TT.name)
}

// uint32 sex = 3;
void TT::clear_sex() {
  sex_ = 0u;
}
::google::protobuf::uint32 TT::sex() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.sex)
  return sex_;
}
void TT::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.sex)
}

// uint32 level_limit = 4;
void TT::clear_level_limit() {
  level_limit_ = 0u;
}
::google::protobuf::uint32 TT::level_limit() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.level_limit)
  return level_limit_;
}
void TT::set_level_limit(::google::protobuf::uint32 value) {
  
  level_limit_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.level_limit)
}

// int32 club_vip_level = 5;
void TT::clear_club_vip_level() {
  club_vip_level_ = 0;
}
::google::protobuf::int32 TT::club_vip_level() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.club_vip_level)
  return club_vip_level_;
}
void TT::set_club_vip_level(::google::protobuf::int32 value) {
  
  club_vip_level_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.club_vip_level)
}

// int32 qb_2 = 6;
void TT::clear_qb_2() {
  qb_2_ = 0;
}
::google::protobuf::int32 TT::qb_2() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.qb_2)
  return qb_2_;
}
void TT::set_qb_2(::google::protobuf::int32 value) {
  
  qb_2_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.qb_2)
}

// uint32 consume_type = 7;
void TT::clear_consume_type() {
  consume_type_ = 0u;
}
::google::protobuf::uint32 TT::consume_type() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.consume_type)
  return consume_type_;
}
void TT::set_consume_type(::google::protobuf::uint32 value) {
  
  consume_type_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.consume_type)
}

// uint32 time_unit = 8;
void TT::clear_time_unit() {
  time_unit_ = 0u;
}
::google::protobuf::uint32 TT::time_unit() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.time_unit)
  return time_unit_;
}
void TT::set_time_unit(::google::protobuf::uint32 value) {
  
  time_unit_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.time_unit)
}

// uint32 is_online = 9;
void TT::clear_is_online() {
  is_online_ = 0u;
}
::google::protobuf::uint32 TT::is_online() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.is_online)
  return is_online_;
}
void TT::set_is_online(::google::protobuf::uint32 value) {
  
  is_online_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.is_online)
}

// uint32 can_buy = 10;
void TT::clear_can_buy() {
  can_buy_ = 0u;
}
::google::protobuf::uint32 TT::can_buy() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.can_buy)
  return can_buy_;
}
void TT::set_can_buy(::google::protobuf::uint32 value) {
  
  can_buy_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.can_buy)
}

// uint32 can_recharge = 11;
void TT::clear_can_recharge() {
  can_recharge_ = 0u;
}
::google::protobuf::uint32 TT::can_recharge() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.can_recharge)
  return can_recharge_;
}
void TT::set_can_recharge(::google::protobuf::uint32 value) {
  
  can_recharge_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.can_recharge)
}

// bytes online_time = 12;
void TT::clear_online_time() {
  online_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TT::online_time() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.online_time)
  return online_time_.GetNoArena();
}
void TT::set_online_time(const ::std::string& value) {
  
  online_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:X.Res.TT.online_time)
}
#if LANG_CXX11
void TT::set_online_time(::std::string&& value) {
  
  online_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:X.Res.TT.online_time)
}
#endif
void TT::set_online_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:X.Res.TT.online_time)
}
void TT::set_online_time(const void* value, size_t size) {
  
  online_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:X.Res.TT.online_time)
}
::std::string* TT::mutable_online_time() {
  
  // @@protoc_insertion_point(field_mutable:X.Res.TT.online_time)
  return online_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TT::release_online_time() {
  // @@protoc_insertion_point(field_release:X.Res.TT.online_time)
  
  return online_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TT::set_allocated_online_time(::std::string* online_time) {
  if (online_time != NULL) {
    
  } else {
    
  }
  online_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_time);
  // @@protoc_insertion_point(field_set_allocated:X.Res.TT.online_time)
}

// bytes offline_time = 13;
void TT::clear_offline_time() {
  offline_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TT::offline_time() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.offline_time)
  return offline_time_.GetNoArena();
}
void TT::set_offline_time(const ::std::string& value) {
  
  offline_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:X.Res.TT.offline_time)
}
#if LANG_CXX11
void TT::set_offline_time(::std::string&& value) {
  
  offline_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:X.Res.TT.offline_time)
}
#endif
void TT::set_offline_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  offline_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:X.Res.TT.offline_time)
}
void TT::set_offline_time(const void* value, size_t size) {
  
  offline_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:X.Res.TT.offline_time)
}
::std::string* TT::mutable_offline_time() {
  
  // @@protoc_insertion_point(field_mutable:X.Res.TT.offline_time)
  return offline_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TT::release_offline_time() {
  // @@protoc_insertion_point(field_release:X.Res.TT.offline_time)
  
  return offline_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TT::set_allocated_offline_time(::std::string* offline_time) {
  if (offline_time != NULL) {
    
  } else {
    
  }
  offline_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offline_time);
  // @@protoc_insertion_point(field_set_allocated:X.Res.TT.offline_time)
}

// repeated uint32 privileged_plat_id_list = 14;
int TT::privileged_plat_id_list_size() const {
  return privileged_plat_id_list_.size();
}
void TT::clear_privileged_plat_id_list() {
  privileged_plat_id_list_.Clear();
}
::google::protobuf::uint32 TT::privileged_plat_id_list(int index) const {
  // @@protoc_insertion_point(field_get:X.Res.TT.privileged_plat_id_list)
  return privileged_plat_id_list_.Get(index);
}
void TT::set_privileged_plat_id_list(int index, ::google::protobuf::uint32 value) {
  privileged_plat_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:X.Res.TT.privileged_plat_id_list)
}
void TT::add_privileged_plat_id_list(::google::protobuf::uint32 value) {
  privileged_plat_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:X.Res.TT.privileged_plat_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TT::privileged_plat_id_list() const {
  // @@protoc_insertion_point(field_list:X.Res.TT.privileged_plat_id_list)
  return privileged_plat_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TT::mutable_privileged_plat_id_list() {
  // @@protoc_insertion_point(field_mutable_list:X.Res.TT.privileged_plat_id_list)
  return &privileged_plat_id_list_;
}

// uint32 privileged_plat_is_online = 15;
void TT::clear_privileged_plat_is_online() {
  privileged_plat_is_online_ = 0u;
}
::google::protobuf::uint32 TT::privileged_plat_is_online() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.privileged_plat_is_online)
  return privileged_plat_is_online_;
}
void TT::set_privileged_plat_is_online(::google::protobuf::uint32 value) {
  
  privileged_plat_is_online_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.privileged_plat_is_online)
}

// uint32 privileged_plat_can_buy = 16;
void TT::clear_privileged_plat_can_buy() {
  privileged_plat_can_buy_ = 0u;
}
::google::protobuf::uint32 TT::privileged_plat_can_buy() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.privileged_plat_can_buy)
  return privileged_plat_can_buy_;
}
void TT::set_privileged_plat_can_buy(::google::protobuf::uint32 value) {
  
  privileged_plat_can_buy_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.privileged_plat_can_buy)
}

// uint32 privileged_plat_can_recharge = 17;
void TT::clear_privileged_plat_can_recharge() {
  privileged_plat_can_recharge_ = 0u;
}
::google::protobuf::uint32 TT::privileged_plat_can_recharge() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.privileged_plat_can_recharge)
  return privileged_plat_can_recharge_;
}
void TT::set_privileged_plat_can_recharge(::google::protobuf::uint32 value) {
  
  privileged_plat_can_recharge_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.privileged_plat_can_recharge)
}

// uint32 payment_terms = 18;
void TT::clear_payment_terms() {
  payment_terms_ = 0u;
}
::google::protobuf::uint32 TT::payment_terms() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.payment_terms)
  return payment_terms_;
}
void TT::set_payment_terms(::google::protobuf::uint32 value) {
  
  payment_terms_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.payment_terms)
}

// bytes valid_time = 19;
void TT::clear_valid_time() {
  valid_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TT::valid_time() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.valid_time)
  return valid_time_.GetNoArena();
}
void TT::set_valid_time(const ::std::string& value) {
  
  valid_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:X.Res.TT.valid_time)
}
#if LANG_CXX11
void TT::set_valid_time(::std::string&& value) {
  
  valid_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:X.Res.TT.valid_time)
}
#endif
void TT::set_valid_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  valid_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:X.Res.TT.valid_time)
}
void TT::set_valid_time(const void* value, size_t size) {
  
  valid_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:X.Res.TT.valid_time)
}
::std::string* TT::mutable_valid_time() {
  
  // @@protoc_insertion_point(field_mutable:X.Res.TT.valid_time)
  return valid_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TT::release_valid_time() {
  // @@protoc_insertion_point(field_release:X.Res.TT.valid_time)
  
  return valid_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TT::set_allocated_valid_time(::std::string* valid_time) {
  if (valid_time != NULL) {
    
  } else {
    
  }
  valid_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valid_time);
  // @@protoc_insertion_point(field_set_allocated:X.Res.TT.valid_time)
}

// uint32 sort_priority = 20;
void TT::clear_sort_priority() {
  sort_priority_ = 0u;
}
::google::protobuf::uint32 TT::sort_priority() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.sort_priority)
  return sort_priority_;
}
void TT::set_sort_priority(::google::protobuf::uint32 value) {
  
  sort_priority_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.sort_priority)
}

// int32 suit_number = 21;
void TT::clear_suit_number() {
  suit_number_ = 0;
}
::google::protobuf::int32 TT::suit_number() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.suit_number)
  return suit_number_;
}
void TT::set_suit_number(::google::protobuf::int32 value) {
  
  suit_number_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.suit_number)
}

// uint32 bag_sort_priority = 22;
void TT::clear_bag_sort_priority() {
  bag_sort_priority_ = 0u;
}
::google::protobuf::uint32 TT::bag_sort_priority() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.bag_sort_priority)
  return bag_sort_priority_;
}
void TT::set_bag_sort_priority(::google::protobuf::uint32 value) {
  
  bag_sort_priority_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.bag_sort_priority)
}

// bytes status = 23;
void TT::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TT::status() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.status)
  return status_.GetNoArena();
}
void TT::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:X.Res.TT.status)
}
#if LANG_CXX11
void TT::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:X.Res.TT.status)
}
#endif
void TT::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:X.Res.TT.status)
}
void TT::set_status(const void* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:X.Res.TT.status)
}
::std::string* TT::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:X.Res.TT.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TT::release_status() {
  // @@protoc_insertion_point(field_release:X.Res.TT.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TT::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:X.Res.TT.status)
}

// uint32 rank = 24;
void TT::clear_rank() {
  rank_ = 0u;
}
::google::protobuf::uint32 TT::rank() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.rank)
  return rank_;
}
void TT::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.rank)
}

// uint32 price_discount = 25;
void TT::clear_price_discount() {
  price_discount_ = 0u;
}
::google::protobuf::uint32 TT::price_discount() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.price_discount)
  return price_discount_;
}
void TT::set_price_discount(::google::protobuf::uint32 value) {
  
  price_discount_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.price_discount)
}

// uint32 vip_discount = 26;
void TT::clear_vip_discount() {
  vip_discount_ = 0u;
}
::google::protobuf::uint32 TT::vip_discount() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.vip_discount)
  return vip_discount_;
}
void TT::set_vip_discount(::google::protobuf::uint32 value) {
  
  vip_discount_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.vip_discount)
}

// repeated .X.Res.TT.Price price_table = 27;
int TT::price_table_size() const {
  return price_table_.size();
}
void TT::clear_price_table() {
  price_table_.Clear();
}
const ::X::Res::TT_Price& TT::price_table(int index) const {
  // @@protoc_insertion_point(field_get:X.Res.TT.price_table)
  return price_table_.Get(index);
}
::X::Res::TT_Price* TT::mutable_price_table(int index) {
  // @@protoc_insertion_point(field_mutable:X.Res.TT.price_table)
  return price_table_.Mutable(index);
}
::X::Res::TT_Price* TT::add_price_table() {
  // @@protoc_insertion_point(field_add:X.Res.TT.price_table)
  return price_table_.Add();
}
::google::protobuf::RepeatedPtrField< ::X::Res::TT_Price >*
TT::mutable_price_table() {
  // @@protoc_insertion_point(field_mutable_list:X.Res.TT.price_table)
  return &price_table_;
}
const ::google::protobuf::RepeatedPtrField< ::X::Res::TT_Price >&
TT::price_table() const {
  // @@protoc_insertion_point(field_list:X.Res.TT.price_table)
  return price_table_;
}

// repeated .X.Res.TT.GoodsAttr goods_attr = 28;
int TT::goods_attr_size() const {
  return goods_attr_.size();
}
void TT::clear_goods_attr() {
  goods_attr_.Clear();
}
const ::X::Res::TT_GoodsAttr& TT::goods_attr(int index) const {
  // @@protoc_insertion_point(field_get:X.Res.TT.goods_attr)
  return goods_attr_.Get(index);
}
::X::Res::TT_GoodsAttr* TT::mutable_goods_attr(int index) {
  // @@protoc_insertion_point(field_mutable:X.Res.TT.goods_attr)
  return goods_attr_.Mutable(index);
}
::X::Res::TT_GoodsAttr* TT::add_goods_attr() {
  // @@protoc_insertion_point(field_add:X.Res.TT.goods_attr)
  return goods_attr_.Add();
}
::google::protobuf::RepeatedPtrField< ::X::Res::TT_GoodsAttr >*
TT::mutable_goods_attr() {
  // @@protoc_insertion_point(field_mutable_list:X.Res.TT.goods_attr)
  return &goods_attr_;
}
const ::google::protobuf::RepeatedPtrField< ::X::Res::TT_GoodsAttr >&
TT::goods_attr() const {
  // @@protoc_insertion_point(field_list:X.Res.TT.goods_attr)
  return goods_attr_;
}

// bytes description = 29;
void TT::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TT::description() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.description)
  return description_.GetNoArena();
}
void TT::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:X.Res.TT.description)
}
#if LANG_CXX11
void TT::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:X.Res.TT.description)
}
#endif
void TT::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:X.Res.TT.description)
}
void TT::set_description(const void* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:X.Res.TT.description)
}
::std::string* TT::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:X.Res.TT.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TT::release_description() {
  // @@protoc_insertion_point(field_release:X.Res.TT.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TT::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:X.Res.TT.description)
}

// uint32 limit_id = 30;
void TT::clear_limit_id() {
  limit_id_ = 0u;
}
::google::protobuf::uint32 TT::limit_id() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.limit_id)
  return limit_id_;
}
void TT::set_limit_id(::google::protobuf::uint32 value) {
  
  limit_id_ = value;
  // @@protoc_insertion_point(field_set:X.Res.TT.limit_id)
}

// bytes subSystemId = 31;
void TT::clear_subsystemid() {
  subsystemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TT::subsystemid() const {
  // @@protoc_insertion_point(field_get:X.Res.TT.subSystemId)
  return subsystemid_.GetNoArena();
}
void TT::set_subsystemid(const ::std::string& value) {
  
  subsystemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:X.Res.TT.subSystemId)
}
#if LANG_CXX11
void TT::set_subsystemid(::std::string&& value) {
  
  subsystemid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:X.Res.TT.subSystemId)
}
#endif
void TT::set_subsystemid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subsystemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:X.Res.TT.subSystemId)
}
void TT::set_subsystemid(const void* value, size_t size) {
  
  subsystemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:X.Res.TT.subSystemId)
}
::std::string* TT::mutable_subsystemid() {
  
  // @@protoc_insertion_point(field_mutable:X.Res.TT.subSystemId)
  return subsystemid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TT::release_subsystemid() {
  // @@protoc_insertion_point(field_release:X.Res.TT.subSystemId)
  
  return subsystemid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TT::set_allocated_subsystemid(::std::string* subsystemid) {
  if (subsystemid != NULL) {
    
  } else {
    
  }
  subsystemid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subsystemid);
  // @@protoc_insertion_point(field_set_allocated:X.Res.TT.subSystemId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TT_ARRAY::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TT_ARRAY::TT_ARRAY()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TT_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:X.Res.TT_ARRAY)
}
TT_ARRAY::TT_ARRAY(const TT_ARRAY& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:X.Res.TT_ARRAY)
}

void TT_ARRAY::SharedCtor() {
  _cached_size_ = 0;
}

TT_ARRAY::~TT_ARRAY() {
  // @@protoc_insertion_point(destructor:X.Res.TT_ARRAY)
  SharedDtor();
}

void TT_ARRAY::SharedDtor() {
}

void TT_ARRAY::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TT_ARRAY::descriptor() {
  protobuf_TT_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TT_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TT_ARRAY& TT_ARRAY::default_instance() {
  protobuf_TT_2eproto::InitDefaults();
  return *internal_default_instance();
}

TT_ARRAY* TT_ARRAY::New(::google::protobuf::Arena* arena) const {
  TT_ARRAY* n = new TT_ARRAY;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TT_ARRAY::Clear() {
// @@protoc_insertion_point(message_clear_start:X.Res.TT_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear();
}

bool TT_ARRAY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:X.Res.TT_ARRAY)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .X.Res.TT items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:X.Res.TT_ARRAY)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:X.Res.TT_ARRAY)
  return false;
#undef DO_
}

void TT_ARRAY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:X.Res.TT_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .X.Res.TT items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:X.Res.TT_ARRAY)
}

::google::protobuf::uint8* TT_ARRAY::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:X.Res.TT_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .X.Res.TT items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:X.Res.TT_ARRAY)
  return target;
}

size_t TT_ARRAY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:X.Res.TT_ARRAY)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .X.Res.TT items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TT_ARRAY::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:X.Res.TT_ARRAY)
  GOOGLE_DCHECK_NE(&from, this);
  const TT_ARRAY* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TT_ARRAY>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:X.Res.TT_ARRAY)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:X.Res.TT_ARRAY)
    MergeFrom(*source);
  }
}

void TT_ARRAY::MergeFrom(const TT_ARRAY& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:X.Res.TT_ARRAY)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void TT_ARRAY::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:X.Res.TT_ARRAY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TT_ARRAY::CopyFrom(const TT_ARRAY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:X.Res.TT_ARRAY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TT_ARRAY::IsInitialized() const {
  return true;
}

void TT_ARRAY::Swap(TT_ARRAY* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TT_ARRAY::InternalSwap(TT_ARRAY* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TT_ARRAY::GetMetadata() const {
  protobuf_TT_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_TT_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TT_ARRAY

// repeated .X.Res.TT items = 1;
int TT_ARRAY::items_size() const {
  return items_.size();
}
void TT_ARRAY::clear_items() {
  items_.Clear();
}
const ::X::Res::TT& TT_ARRAY::items(int index) const {
  // @@protoc_insertion_point(field_get:X.Res.TT_ARRAY.items)
  return items_.Get(index);
}
::X::Res::TT* TT_ARRAY::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:X.Res.TT_ARRAY.items)
  return items_.Mutable(index);
}
::X::Res::TT* TT_ARRAY::add_items() {
  // @@protoc_insertion_point(field_add:X.Res.TT_ARRAY.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::X::Res::TT >*
TT_ARRAY::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:X.Res.TT_ARRAY.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::X::Res::TT >&
TT_ARRAY::items() const {
  // @@protoc_insertion_point(field_list:X.Res.TT_ARRAY.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Res
}  // namespace X

// @@protoc_insertion_point(global_scope)
